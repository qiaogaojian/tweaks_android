# 开启并行编译，相当使用了多线程，仅仅适用于模块化项目（存在多个 Library 库工程依赖主工程）
org.gradle.parallel=true 

# 构建初始化需要执行许多任务，例如java虚拟机的启动，加载虚拟机环境，加载class文件等等，
# 配置此项可以开启线程守护，并且仅仅第一次编译时会开启线程（Gradle 3.0版本以后默认支持）
org.gradle.daemon=true 

# 配置编译时的虚拟机大小
org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=2048m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8

# 最大的优势在于帮助多 Moudle 的工程提速，在编译多个 Module 相互依赖的项目时，
# Gradle 会按需选择进行编译，即仅仅编译相关的 Module
org.gradle.configureondemand=true

# 开启构建缓存，Gradle 3.5新的缓存机制，可以缓存所有任务的输出，
# 不同于buildCache仅仅缓存dex的外部libs，它可以复用
# 任何时候的构建缓存，设置包括其它分支的构建缓存
org.gradle.caching = true

android.injected.testOnly=false

#�Ƿ�ʹ��AndroidX
android.useAndroidX=true
#�Ƿ�Ǩ�Ƶ�������
android.enableJetifier=true
